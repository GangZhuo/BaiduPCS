#ifdef WIN32
# include <malloc.h>
#else
# include <alloca.h>
#endif

#include "pcs_mem.h"
#include "pcs_list.h"

PCS_API PcsList *pcs_list_create()
{
	PcsList *res = 0;
	res = (PcsList *)pcs_malloc(sizeof(PcsList));
	if (res)
		memset(res, 0, sizeof(PcsList));
	return res;
}

PCS_API PcsList *pcs_list_create_ex(void *data, void (*free_data)(void *))
{
	PcsList *res = pcs_list_create();
	if (res) {
		res->data = data;
		res->free_data = free_data;
	}
	return res;
}

PCS_API void pcs_list_destroy(PcsList *list)
{
	PcsList *p = list, *p2;
	while(p) {
		p2 = p;
		p = p->next;
		if (p2->data && p2->free_data)
			(*p2->free_data)(p2->data);
		pcs_free(p2);
	}
}

PCS_API PcsList *pcs_list_add_ex(PcsList *list, void *data, void (*free_data)(void *))
{
	PcsList *p = pcs_list_create_ex(data, free_data);
	if (p) {
		while(list->next) {
			list = list->next;
		}
		list->next = p;
		p->next = 0;
	}
	return p;
}
